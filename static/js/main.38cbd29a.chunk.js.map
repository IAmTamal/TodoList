{"version":3,"sources":["components/Todo/Todo.js","App.js","index.js"],"names":["color","Todo","useState","inputdata","setInputdata","list","localStorage","getItem","JSON","parse","getlocalData","task","setTask","editCheck","setEditCheck","category","setcategory","useEffect","setItem","stringify","change_color","change_cate","val","addItem","arr","map","curElem","id","Date","getTime","toString","alert","document","getElementById","setAttribute","className","onClick","type","placeholder","value","onChange","event","target","texts","Id","filter","deleteItem","Texts","window","confirm","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.38cbd29a.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport './Todocss.css';\r\n\r\nconst getlocalData=()=>{\r\n    \r\n    const list=localStorage.getItem(\"myTodoList\");\r\n    if(list)\r\n    {\r\n        return JSON.parse(list);\r\n    }\r\n    else{\r\n        return [];\r\n    }\r\n\r\n\r\n}\r\n\r\nconst color=['normal','important','urgent'];\r\n\r\n\r\nconst Todo = () => {\r\n   const [inputdata,setInputdata]=useState(\"\");\r\n   const [task,setTask]=useState(getlocalData());\r\n   const [editCheck,setEditCheck]=useState();\r\n   const [category,setcategory]=useState(\"normal\");\r\n   \r\n\r\n   useEffect(() => {\r\n  localStorage.setItem(\"myTodoList\",JSON.stringify(task)) \r\n}, [task])\r\n\r\nuseEffect(() => {\r\n    change_color(category);\r\n}, [category])\r\n//changing category \r\nconst change_cate=(val)=>{\r\n  setcategory(val);\r\n}\r\n\r\n\r\n//adding item to list\r\n   const addItem=()=>{\r\n       if(!inputdata){\r\n          alert(\"Please write some tasks üôè\");\r\n       }\r\n      else if(editCheck)\r\n       {\r\n          const arr=task.map((curElem)=>{\r\n                 if(curElem.id===editCheck)\r\n                 {\r\n                     const obj={\"texts\":inputdata,\"id\":editCheck,\"category\":category};\r\n                     return obj;\r\n                 }\r\n                 return curElem;\r\n          })\r\n          setTask(arr);\r\n          setEditCheck(\"\");\r\n          setInputdata(\"\");\r\n       }\r\n       else{\r\n           const val={\r\n               \"texts\":inputdata,\r\n               \"id\":new Date().getTime().toString(),\r\n               \"category\":category\r\n           }\r\n           setTask([...task,val]);\r\n           setInputdata(\"\");\r\n       }\r\n   }\r\n  \r\n   //deleting items\r\n   const deleteItem=(Id)=>{\r\n        const list=task.filter((curElem)=>{\r\n            return curElem.id !== Id\r\n        })\r\n        setTask(list)\r\n   }\r\n //edit items\r\n   const editItem=(Texts,Id)=>{\r\n        setInputdata(Texts);\r\n        setEditCheck(Id)\r\n   }\r\n//remove all\r\n   const removeAll=()=>{\r\n       const ch=window.confirm(\"do u really want to delete task of all the category\");\r\n       if(ch)\r\n       {\r\n        setTask([]);\r\n       }\r\n     \r\n   }\r\n   function change_color(id)\r\n   {\r\n    \r\n    color.map((curElem)=>{\r\n        if(curElem===id)\r\n        {\r\n            document.getElementById(id).setAttribute(\"style\",\"color:white; background-color:black;font-weight: bold;\")\r\n        }\r\n        else{\r\n            document.getElementById(curElem).setAttribute(\"style\",\"color:rgb(204, 67, 135); background-color:aliceblue;font-weight:normal;\") \r\n        }\r\n        return(\"\")\r\n    })\r\n       \r\n   }\r\n    return (\r\n        \r\n            <div className=\"screen\">\r\n    <div className=\"container\">\r\n        <div className=\"day\">\r\n            <div className=\"normal\" id=\"normal\" onClick={()=>{change_cate(\"normal\");change_color('normal');}}>Normalüü°</div>\r\n            <div className=\"important\" id=\"important\" onClick={()=>{change_cate(\"important\");change_color('important');}}>Importantüü¢</div>\r\n            <div className=\"urgent\" id=\"urgent\" onClick={()=>{change_cate(\"urgent\");change_color('urgent');}}>Urgentüî¥</div>\r\n        </div>\r\n        <div className=\"list_container\">\r\n            <div className=\"type_box\">\r\n                <input type=\"text\" \r\n                placeholder=\"write a task ‚úç\" \r\n                value={inputdata}\r\n                onChange={(event)=>setInputdata(event.target.value)}\r\n                />\r\n                {!editCheck ? (<div className=\"add\" onClick={addItem}>‚ûï</div>):(<div className=\"add\" onClick={addItem}>‚úç</div>)}\r\n\r\n                \r\n            </div>\r\n            <div className=\"task_container\">\r\n               \r\n               {task.map((curElem)=>{\r\n                   if(curElem.category===category)\r\n                   {\r\n                           return(\r\n                            <div className=\"task_box\" key={curElem.id}>\r\n                            <div className=\"texts\">{curElem.texts}</div>\r\n                            <div className=\"icons\">\r\n                                <div className=\"delete\" onClick={()=>deleteItem(curElem.id)}>‚ùå</div>\r\n                                <div className=\"edit\" onClick={()=>editItem(curElem.texts,curElem.id)}>‚úç</div>\r\n                                \r\n                            </div>\r\n                         \r\n                          \r\n                        </div>\r\n                           )\r\n                   }//end if\r\n                   return(<></>)\r\n               })}\r\n\r\n                \r\n               <center> <div className=\"removeall\" onClick={removeAll}>Remove all üöΩ</div>  </center>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Todo;\r\n","import React from 'react'\nimport Todo from './components/Todo/Todo'\nconst App = () => {\n  return (\n    <>\n      \n<Todo />\n  \n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')  );\n\n"],"sourceRoot":""}